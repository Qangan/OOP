/*
 * This source file was generated by the Gradle 'init' task
 */
package qangan.heapsort;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;

import java.util.Arrays;
import java.util.Random;
import org.junit.jupiter.api.Test;

class HeapsortTest {
    @Test
    void testEmptyArray() {
        int[] arr = new int[0];
        Heapsort.heapSort(arr);
        assertArrayEquals(new int[0], arr);
    }

    @Test
    void testSingleElement() {
        int[] arr = {2305};
        Heapsort.heapSort(arr);
        assertArrayEquals(new int[] {2305}, arr);
    }

    @Test
    void testAllEqual() {
        int[] arr = {7, 7, 7, 7, 7};
        int[] expected = arr.clone();
        Heapsort.heapSort(arr);
        assertArrayEquals(expected, arr);
    }

    @Test
    void testAlreadySorted() {
        int[] arr = {1, 2, 3, 4, 5, 6, 7};
        int[] expected = arr.clone();
        Heapsort.heapSort(arr);
        assertArrayEquals(expected, arr);
    }

    @Test
    void testReverseSorted() {
        int[] arr = {9, 8, 7, 6, 5, 4, 3, 2, 1};
        int[] expected = arr.clone();
        Arrays.sort(expected);
        Heapsort.heapSort(arr);
        assertArrayEquals(expected, arr);
    }

    @Test
    void randomArrays() {
        int seed = 1337100500;
        Random random = new Random(seed);
        for (int i = 0; i < 1000; i++) {
            int lenght = random.nextInt(1000);
            int[] arr = new int[lenght];
            for (int j = 0; j < lenght; j++) {
                arr[j] = random.nextInt(1000);
            }
            int[] cprarray = arr.clone();
            Heapsort.heapSort(arr);
            Arrays.sort(cprarray);
            assertArrayEquals(arr, cprarray, "HeapSort made a bad work");
        }
    }

}
